This layer provides support for LORX One Wifx gateway
========================================================================

Supported SoCs / MACHINE names
==============================
- LORIX One product / sama5d4-lorix-one


Sources
=======
- meta-wifx
URI: git@github.com:Wifx/meta-wifx.git
URI: https://github.com/Wifx/meta-wifx.git
Branch: krogoth


Dependencies
============
This Layer depends on :
- meta-atmel
URI: git://github.com/linux4sam/meta-atmel.git
URI: https://github.com/linux4sam/meta-atmel.git
Branch: krogoth

- meta-openembedded
URI: git://git.openembedded.org/meta-openembedded
URI: http://cgit.openembedded.org/meta-openembedded/
Branch: krogoth


Build procedure
===============

0/ Create a directory
mkdir my_dir
cd my_dir

1/ Clone yocto/poky git repository with the proper branch ready
git clone git://git.yoctoproject.org/poky

2/ Clone meta-openembedded git repository with the proper branch ready
git clone git://git.openembedded.org/meta-openembedded

3/ Clone meta-atmel layer with the proper branch ready
git clone git://github.com/linux4sam/meta-atmel.git

4/ Clone meta-wifx layer with the proper branch ready
git clone git@github.com:Wifx/meta-wifx.git

5/ Enter the poky directory to configure the build system and start the build process
cd poky

6/ Initialize build directory
source oe-init-build-env build-wifx

7/ Add meta-atmel layer to bblayer configuration file
vim conf/bblayers.conf

# POKY_BBLAYERS_CONF_VERSION is increased each time build/conf/bblayers.conf
# changes incompatibly
POKY_BBLAYERS_CONF_VERSION = "2"

BBPATH = "${TOPDIR}"
BBFILES ?= ""

BSPDIR := "${@os.path.abspath(os.path.dirname(d.getVar('FILE', True)) + '/../../..')}"

BBLAYERS ?= " \
  ${BSPDIR}/meta-wifx \
  ${BSPDIR}/meta-atmel \
  ${BSPDIR}/poky/meta \
  ${BSPDIR}/poky/meta-poky \
  ${BSPDIR}/poky/meta-yocto-bsp \
  ${BSPDIR}/meta-openembedded/meta-oe \
  ${BSPDIR}/meta-openembedded/meta-networking \
  ${BSPDIR}/meta-openembedded/meta-python \
  ${BSPDIR}/meta-openembedded/meta-ruby \
  ${BSPDIR}/meta-openembedded/meta-multimedia \
  "

BBLAYERS_NON_REMOVABLE ?= " \
  ${BSPDIR}/poky/meta \
  ${BSPDIR}/poky/meta-poky \
  "

8/ Edit local.conf to specify the machine, location of source archived, package type (rpm, deb or ipk)
Pick one MACHINE name from the "Supported SoCs / MACHINE names" chapter above
and edit the "local.conf" file. Here is an example:

vim conf/local.conf
[...]
MACHINE ??= "sama5d4-lorix-one"
[...]
DL_DIR ?= "your_download_directory_path"
[...]
PACKAGE_CLASSES ?= "package_ipk"
[...]
USER_CLASSES ?= "buildstats image-mklibs"

To get better performance, use the "poky-wifx" distribution by also adding that
line:
DISTRO = "poky-wifx"

9/ Build Wifx standard image
bitbake wifx-base-image

Typical bitbake output
======================
Build Configuration:
BB_VERSION        = "1.30.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "universal"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "sama5d4-lorix-one"
DISTRO            = "poky-wifx"
DISTRO_VERSION    = "2.1"
TUNE_FEATURES     = "arm armv7a vfp thumb neon       callconvention-hard       cortexa5"
TARGET_FPU        = "hard"
meta-wifx         = "krogoth:9f56395887a6133c473aa8ba0b97ba758378c306"
meta-atmel        = "krogoth:784a6a7fe94e6939325f60f4dd2cc24987ff090d"
meta              
meta-poky         
meta-yocto-bsp    = "krogoth:eff84a76acea1a0842194106a66684511f409842"
meta-oe           
meta-networking   
meta-python       
meta-ruby         
meta-multimedia   = "krogoth:2092396f0e4fd3891b398c7180528aba67e1d522"

10/ Or build the devel image which contains also the toolchain and app headers
bitbake wifx-base-image-dev

11/ Or build the SDK image which contains in addition the kernel headers and debug utilities
bitbake wifx-base-image-sdk

12/ In both cases, the toolchain installer is located in build-wifx/tmp/deploy/sdk


Maintainers:
Yannick Lanz <yannick.lanz@gmail.com>

When creating patches insert the [meta-wifx] tag in the subject, for example
use something like:
git format-patch -s --subject-prefix='meta-wifx][PATCH' <origin>
